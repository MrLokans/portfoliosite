version: '2.1'

networks:
  sentry_network:
    driver: bridge
  backend_network:
    driver: bridge

services:
  
  messagebus:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    networks:
      - backend_network

  redis:
    extends:
      file: docker-compose.base.yml
      service: redis
    networks:
      - backend_network

  # Django back-end
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash ./entrypoint.sh
    environment:
      - DJANGO_SETTINGS_MODULE=personal_site.settings.dev
    env_file:
      - ./environment/bus.env
      - ./environment/backend.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/app/
      - ./static/:/app/personal_site/staticfiles
    # Enables PDB debugging
    stdin_open: true
    tty: true
    working_dir: /app/
    links:
      - messagebus
      - redis
    networks:
      - sentry_network
      - backend_network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    entrypoint: ./entrypoint.sh
    env_file:
      - ./environment/bus.env
    volumes:
      - ./frontend/:/frontend/
    ports:
      - "8090:8090"

  # celery-worker:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: celery-worker
  #   links:
  #     - redis
  #     - messagebus
  #   networks:
  #     - backend_network
  #   restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./static/:/static/
    volumes_from:
      - frontend
    depends_on:
      backend:
        condition: service_healthy
    links:
      - backend
    networks:
      - backend_network

volumes:
  frontend-data:
  database-data:
