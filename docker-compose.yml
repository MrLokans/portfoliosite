version: '2.0'

services:
  
  messagebus:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq

  redis:
    extends:
      file: docker-compose.base.yml
      service: redis

  # Django back-end
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash ./entrypoint.sh
    environment:
      - DJANGO_SETTINGS_MODULE=personal_site.settings.dev
    env_file:
      - bus.env
      - backend.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/app/
      - ./static/:/app/personal_site/staticfiles
    # Enables PDB debugging
    stdin_open: true
    tty: true
    working_dir: /app/
    links:
      - messagebus
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    entrypoint: ./entrypoint.sh
    env_file:
      - bus.env
    volumes:
      - ./frontend/:/frontend/
    ports:
      - "8090:8090"

  celery-worker:
    extends:
      file: docker-compose.base.yml
      service: celery-worker
    links:
      - redis
      - messagebus

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./static/:/static/
    volumes_from:
      - frontend
    depends_on:
      - backend
      - frontend
    links:
      - backend


  # ====== Sentry services ======
  sentry_postgres:
    image: postgres:9.5-alpine
    volumes_from:
    - sentry_postgres_data
    env_file:
      - sentry.env

  sentry_postgres_data:
    image: alpine
    command: echo
    volumes:
      - ./pgdata_sentry:/var/lib/postgresql/data

  sentry_server:
    # TODO: Add entrypoint script with initial data migration
    image: sentry:8.12.0
    volumes:
      - ./sentry-files:/var/lib/sentry/files
    links:
      - sentry_postgres
      - redis
    ports:
      - "19000:9000"
    env_file:
      - sentry.env

  sentry_celery_beat:
    image: sentry:8.12.0
    links:
      - sentry_postgres
      - redis
    env_file:
      - sentry.env
    command: "sentry run cron"

  sentry_worker:
    image: sentry:8.12.0
    links:
      - sentry_postgres
      - redis
    env_file:
      - sentry.env
    command: "sentry run worker"

volumes:
  frontend-data:
  database-data: